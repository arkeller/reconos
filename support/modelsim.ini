; Copyright 2006 Mentor Graphics Corporation
;
; All Rights Reserved.
;
; THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY OF 
; MENTOR GRAPHICS CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS.
;   

[Library]
std = $MODEL_TECH/../std
ieee = $MODEL_TECH/../ieee
verilog = $MODEL_TECH/../verilog
vital2000 = $MODEL_TECH/../vital2000
std_developerskit = $MODEL_TECH/../std_developerskit
synopsys = $MODEL_TECH/../synopsys
modelsim_lib = $MODEL_TECH/../modelsim_lib
;vhdl_psl_checkers = $MODEL_TECH/../vhdl_psl_checkers       // Source files only for this release
;verilog_psl_checkers = $MODEL_TECH/../verilog_psl_checkers // Source files only for this release

simprims_ver = $ISE_LIB/simprims_ver/
unisims_ver = $ISE_LIB/unisims_ver/
XilinxCoreLib_ver = $ISE_LIB/XilinxCoreLib_ver/
simprim = $ISE_LIB/simprim/
unisim = $ISE_LIB/unisim/
XilinxCoreLib = $ISE_LIB/XilinxCoreLib/


; EDK pcore libraries
agilent_atc2_v1_00_a = $EDK_LIB/agilent_atc2_v1_00_a
agilent_mtc_v4_v1_00_a = $EDK_LIB/agilent_mtc_v4_v1_00_a
agilent_mtc_v5_v1_00_a = $EDK_LIB/agilent_mtc_v5_v1_00_a
agilent_mtc_v5_v1_00_b = $EDK_LIB/agilent_mtc_v5_v1_00_b
apu_fpu_v2_10_a = $EDK_LIB/apu_fpu_v2_10_a
apu_fpu_v2_10_b = $EDK_LIB/apu_fpu_v2_10_b
bfm_synch_v1_00_a = $EDK_LIB/bfm_synch_v1_00_a/
bram_common_v1_00_a = $EDK_LIB/bram_common_v1_00_a
bram_if_cntlr_v1_00_a = $EDK_LIB/bram_if_cntlr_v1_00_a
bram_if_cntlr_v1_00_b = $EDK_LIB/bram_if_cntlr_v1_00_b
chan_dma_sg_v1_00_a = $EDK_LIB/chan_dma_sg_v1_00_a
channel_fifo_v1_00_a = $EDK_LIB/channel_fifo_v1_00_a
chipscope_icon_v1_00_a = $EDK_LIB/chipscope_icon_v1_00_a
chipscope_icon_v1_01_a = $EDK_LIB/chipscope_icon_v1_01_a
chipscope_ila_v1_00_a = $EDK_LIB/chipscope_ila_v1_00_a
chipscope_opb_iba_v1_00_a = $EDK_LIB/chipscope_opb_iba_v1_00_a
chipscope_plb_iba_v1_00_a = $EDK_LIB/chipscope_plb_iba_v1_00_a
chipscope_vio_v1_00_a = $EDK_LIB/chipscope_vio_v1_00_a
clock_module_ref_v1_00_a = $EDK_LIB/clock_module_ref_v1_00_a
common_v1_00_a = $EDK_LIB/common_v1_00_a
compedklib.log = $EDK_LIB/compedklib.log
CompileListFiles = $EDK_LIB/CompileListFiles
csum_v1_00_a = $EDK_LIB/csum_v1_00_a
dcm_module_v1_00_a = $EDK_LIB/dcm_module_v1_00_a
dcr_intc_v1_00_b = $EDK_LIB/dcr_intc_v1_00_b
dcr_v29_v1_00_a = $EDK_LIB/dcr_v29_v1_00_a
ddr2_v1_00_a = $EDK_LIB/ddr2_v1_00_a
ddr2_v1_01_a = $EDK_LIB/ddr2_v1_01_a
ddr2_v1_02_a = $EDK_LIB/ddr2_v1_02_a
ddr2_v1_02_b = $EDK_LIB/ddr2_v1_02_b
ddr_v1_00_b = $EDK_LIB/ddr_v1_00_b
ddr_v1_00_c = $EDK_LIB/ddr_v1_00_c
ddr_v1_10_a = $EDK_LIB/ddr_v1_10_a
ddr_v1_11_a = $EDK_LIB/ddr_v1_11_a
ddr_v1_12_a = $EDK_LIB/ddr_v1_12_a
ddr_v2_00_a = $EDK_LIB/ddr_v2_00_a
ddr_v2_00_b = $EDK_LIB/ddr_v2_00_b
ddr_v2_00_c = $EDK_LIB/ddr_v2_00_c
ddr_v2_01_a = $EDK_LIB/ddr_v2_01_a
ddr_v2_01_b = $EDK_LIB/ddr_v2_01_b
ddr_v2_01_c = $EDK_LIB/ddr_v2_01_c
ddr_v3_00_a = $EDK_LIB/ddr_v3_00_a
dma_sg_v1_01_b = $EDK_LIB/dma_sg_v1_01_b
dma_sg_v1_02_b = $EDK_LIB/dma_sg_v1_02_b
dma_sg_v1_04_b = $EDK_LIB/dma_sg_v1_04_b
dma_sg_v2_00_a = $EDK_LIB/dma_sg_v2_00_a
dma_sg_v2_01_a = $EDK_LIB/dma_sg_v2_01_a
dre_v1_00_a = $EDK_LIB/dre_v1_00_a
dre_v1_01_a = $EDK_LIB/dre_v1_01_a
dre_v2_00_a = $EDK_LIB/dre_v2_00_a
dre_v2_01_a = $EDK_LIB/dre_v2_01_a
dsbram_if_cntlr_v3_00_a = $EDK_LIB/dsbram_if_cntlr_v3_00_a
dsocm_v10_v2_00_a = $EDK_LIB/dsocm_v10_v2_00_a
ecc_v1_00_a = $EDK_LIB/ecc_v1_00_a
ecc_v1_00_b = $EDK_LIB/ecc_v1_00_b
ecc_v1_01_a = $EDK_LIB/ecc_v1_01_a
emc_common_v1_10_b = $EDK_LIB/emc_common_v1_10_b
emc_common_v2_00_a = $EDK_LIB/emc_common_v2_00_a
emc_common_v2_00_b = $EDK_LIB/emc_common_v2_00_b
emc_common_v2_01_a = $EDK_LIB/emc_common_v2_01_a
emc_common_v2_01_b = $EDK_LIB/emc_common_v2_01_b
fcb2fsl_bridge_v1_00_a = $EDK_LIB/fcb2fsl_bridge_v1_00_a
fcb_v10_v1_00_a = $EDK_LIB/fcb_v10_v1_00_a
fit_timer_v1_01_a = $EDK_LIB/fit_timer_v1_01_a
fsl_v20_v2_00_a = $EDK_LIB/fsl_v20_v2_00_a
hard_temac_v1_00_a = $EDK_LIB/hard_temac_v1_00_a
hard_temac_v3_00_a = $EDK_LIB/hard_temac_v3_00_a
hard_temac_v3_00_b = $EDK_LIB/hard_temac_v3_00_b
hwicap_v1_00_a = $EDK_LIB/hwicap_v1_00_a
intc_core_v1_00_c = $EDK_LIB/intc_core_v1_00_c
interrupt_control_v1_00_a = $EDK_LIB/interrupt_control_v1_00_a
ipic_to_temac_v2_00_a = $EDK_LIB/ipic_to_temac_v2_00_a
ipic_to_temac_v3_00_a = $EDK_LIB/ipic_to_temac_v3_00_a
ipif_common_v1_00_a = $EDK_LIB/ipif_common_v1_00_a
ipif_common_v1_00_b = $EDK_LIB/ipif_common_v1_00_b
ipif_common_v1_00_c = $EDK_LIB/ipif_common_v1_00_c
ipif_common_v1_00_d = $EDK_LIB/ipif_common_v1_00_d
ipif_common_v1_00_e = $EDK_LIB/ipif_common_v1_00_e
isbram_if_cntlr_v3_00_a = $EDK_LIB/isbram_if_cntlr_v3_00_a
isocm_v10_v2_00_a = $EDK_LIB/isocm_v10_v2_00_a
jtagppc_cntlr_v1_00_b = $EDK_LIB/jtagppc_cntlr_v1_00_b
jtagppc_cntlr_v2_00_a = $EDK_LIB/jtagppc_cntlr_v2_00_a
lib_common_v1_00_a = $EDK_LIB/lib_common_v1_00_a
lmb_bram_if_cntlr_v1_00_b = $EDK_LIB/lmb_bram_if_cntlr_v1_00_b
lmb_bram_if_cntlr_v2_00_a = $EDK_LIB/lmb_bram_if_cntlr_v2_00_a
lmb_v10_v1_00_a = $EDK_LIB/lmb_v10_v1_00_a
mch_opb_ddr2_v1_00_a = $EDK_LIB/mch_opb_ddr2_v1_00_a
mch_opb_ddr2_v1_01_a = $EDK_LIB/mch_opb_ddr2_v1_01_a
mch_opb_ddr_v1_00_a = $EDK_LIB/mch_opb_ddr_v1_00_a
mch_opb_ddr_v1_00_b = $EDK_LIB/mch_opb_ddr_v1_00_b
mch_opb_ddr_v1_00_c = $EDK_LIB/mch_opb_ddr_v1_00_c
mch_opb_emc_v1_00_a = $EDK_LIB/mch_opb_emc_v1_00_a
mch_opb_emc_v1_01_a = $EDK_LIB/mch_opb_emc_v1_01_a
mch_opb_ipif_v1_00_a = $EDK_LIB/mch_opb_ipif_v1_00_a
mch_opb_ipif_v1_00_b = $EDK_LIB/mch_opb_ipif_v1_00_b
mch_opb_ipif_v1_00_c = $EDK_LIB/mch_opb_ipif_v1_00_c
mch_opb_ipif_v1_00_d = $EDK_LIB/mch_opb_ipif_v1_00_d
mch_opb_ipif_v1_00_e = $EDK_LIB/mch_opb_ipif_v1_00_e
mch_opb_sdram_v1_00_a = $EDK_LIB/mch_opb_sdram_v1_00_a
microblaze_v2_10_a = $EDK_LIB/microblaze_v2_10_a
microblaze_v3_00_a = $EDK_LIB/microblaze_v3_00_a
microblaze_v4_00_a = $EDK_LIB/microblaze_v4_00_a
microblaze_v4_00_b = $EDK_LIB/microblaze_v4_00_b
microblaze_v5_00_a = $EDK_LIB/microblaze_v5_00_a
microblaze_v5_00_b = $EDK_LIB/microblaze_v5_00_b
microblaze_v5_00_c = $EDK_LIB/microblaze_v5_00_c
mii_to_rmii_v1_00_a = $EDK_LIB/mii_to_rmii_v1_00_a
mii_to_rmii_v1_00_b = $EDK_LIB/mii_to_rmii_v1_00_b
modelsim.ini = $EDK_LIB/modelsim.ini
opb2dcr_bridge_v1_00_a = $EDK_LIB/opb2dcr_bridge_v1_00_a
opb2dcr_bridge_v1_00_b = $EDK_LIB/opb2dcr_bridge_v1_00_b
opb2plb_bridge_v1_00_c = $EDK_LIB/opb2plb_bridge_v1_00_c
opb_arbiter_v1_02_c = $EDK_LIB/opb_arbiter_v1_02_c
opb_arbiter_v1_02_d = $EDK_LIB/opb_arbiter_v1_02_d
opb_arbiter_v1_02_e = $EDK_LIB/opb_arbiter_v1_02_e
opb_bfm = $EDK_LIB/opb_bfm
opb_bram_if_cntlr_v1_00_a = $EDK_LIB/opb_bram_if_cntlr_v1_00_a
opb_bus_attach_v1_00_a = $EDK_LIB/opb_bus_attach_v1_00_a
opb_can_v1_00_a = $EDK_LIB/opb_can_v1_00_a
opb_central_dma_v1_00_a = $EDK_LIB/opb_central_dma_v1_00_a
opb_central_dma_v1_00_b = $EDK_LIB/opb_central_dma_v1_00_b
opb_central_dma_v1_00_c = $EDK_LIB/opb_central_dma_v1_00_c
opb_ddr_v1_00_b = $EDK_LIB/opb_ddr_v1_00_b
opb_ddr_v1_10_a = $EDK_LIB/opb_ddr_v1_10_a
opb_ddr_v2_00_a = $EDK_LIB/opb_ddr_v2_00_a
opb_ddr_v2_00_b = $EDK_LIB/opb_ddr_v2_00_b
opb_ddr_v2_00_c = $EDK_LIB/opb_ddr_v2_00_c
opb_deltasigma_adc_v1_01_a = $EDK_LIB/opb_deltasigma_adc_v1_01_a
opb_deltasigma_dac_v1_01_a = $EDK_LIB/opb_deltasigma_dac_v1_01_a
opb_device_bfm_v1_00_a = $EDK_LIB/opb_device_bfm_v1_00_a
opb_emc_v1_10_b = $EDK_LIB/opb_emc_v1_10_b
opb_emc_v2_00_a = $EDK_LIB/opb_emc_v2_00_a
opb_epc_v1_00_a = $EDK_LIB/opb_epc_v1_00_a
opb_ethernetlite_v1_00_a = $EDK_LIB/opb_ethernetlite_v1_00_a
opb_ethernetlite_v1_01_a = $EDK_LIB/opb_ethernetlite_v1_01_a
opb_ethernetlite_v1_01_b = $EDK_LIB/opb_ethernetlite_v1_01_b
opb_ethernet_v1_00_m = $EDK_LIB/opb_ethernet_v1_00_m
opb_ethernet_v1_01_a = $EDK_LIB/opb_ethernet_v1_01_a
opb_ethernet_v1_02_a = $EDK_LIB/opb_ethernet_v1_02_a
opb_ethernet_v1_04_a = $EDK_LIB/opb_ethernet_v1_04_a
opb_gpio_v1_00_a = $EDK_LIB/opb_gpio_v1_00_a
opb_gpio_v2_00_a = $EDK_LIB/opb_gpio_v2_00_a
opb_gpio_v3_01_a = $EDK_LIB/opb_gpio_v3_01_a
opb_gpio_v3_01_b = $EDK_LIB/opb_gpio_v3_01_b
opb_hdlc_v1_00_c = $EDK_LIB/opb_hdlc_v1_00_c
opb_hdlc_v2_00_a = $EDK_LIB/opb_hdlc_v2_00_a
opb_hdlc_v2_01_a = $EDK_LIB/opb_hdlc_v2_01_a
opb_hwicap_v1_00_a = $EDK_LIB/opb_hwicap_v1_00_a
opb_hwicap_v1_00_b = $EDK_LIB/opb_hwicap_v1_00_b
opb_iic_v1_01_b = $EDK_LIB/opb_iic_v1_01_b
opb_iic_v1_01_c = $EDK_LIB/opb_iic_v1_01_c
opb_iic_v1_01_d = $EDK_LIB/opb_iic_v1_01_d
opb_iic_v1_02_a = $EDK_LIB/opb_iic_v1_02_a
opb_intc_v1_00_c = $EDK_LIB/opb_intc_v1_00_c
opb_ipif_msp0_v1_00_a = $EDK_LIB/opb_ipif_msp0_v1_00_a
opb_ipif_msp0_v1_00_b = $EDK_LIB/opb_ipif_msp0_v1_00_b
opb_ipif_ssp0_v1_00_a = $EDK_LIB/opb_ipif_ssp0_v1_00_a
opb_ipif_ssp0_v1_00_b = $EDK_LIB/opb_ipif_ssp0_v1_00_b
opb_ipif_ssp1_v1_00_a = $EDK_LIB/opb_ipif_ssp1_v1_00_a
opb_ipif_ssp2_v1_00_a = $EDK_LIB/opb_ipif_ssp2_v1_00_a
opb_ipif_ssp3_v1_00_a = $EDK_LIB/opb_ipif_ssp3_v1_00_a
opb_ipif_v1_23_a = $EDK_LIB/opb_ipif_v1_23_a
opb_ipif_v1_23_e = $EDK_LIB/opb_ipif_v1_23_e
opb_ipif_v2_00_a = $EDK_LIB/opb_ipif_v2_00_a
opb_ipif_v2_00_b = $EDK_LIB/opb_ipif_v2_00_b
opb_ipif_v2_00_f = $EDK_LIB/opb_ipif_v2_00_f
opb_ipif_v2_00_g = $EDK_LIB/opb_ipif_v2_00_g
opb_ipif_v2_00_h = $EDK_LIB/opb_ipif_v2_00_h
opb_ipif_v2_00_i = $EDK_LIB/opb_ipif_v2_00_i
opb_ipif_v2_00_j = $EDK_LIB/opb_ipif_v2_00_j
opb_ipif_v2_00_l = $EDK_LIB/opb_ipif_v2_00_l
opb_ipif_v2_05_a = $EDK_LIB/opb_ipif_v2_05_a
opb_ipif_v2_06_a = $EDK_LIB/opb_ipif_v2_06_a
opb_ipif_v3_00_a = $EDK_LIB/opb_ipif_v3_00_a
opb_ipif_v3_01_a = $EDK_LIB/opb_ipif_v3_01_a
opb_ipif_v3_01_b = $EDK_LIB/opb_ipif_v3_01_b
opb_ipif_v3_01_c = $EDK_LIB/opb_ipif_v3_01_c
opb_jtag_uart_v1_00_b = $EDK_LIB/opb_jtag_uart_v1_00_b
opb_mdm_v2_00_a = $EDK_LIB/opb_mdm_v2_00_a
opb_monitor_bfm_v1_00_a = $EDK_LIB/opb_monitor_bfm_v1_00_a
opb_opb_lite_v1_00_a = $EDK_LIB/opb_opb_lite_v1_00_a
opb_pci_arbiter_v1_00_a = $EDK_LIB/opb_pci_arbiter_v1_00_a
opb_pci_v1_00_c = $EDK_LIB/opb_pci_v1_00_c
opb_pci_v1_01_a = $EDK_LIB/opb_pci_v1_01_a
opb_pci_v1_02_a = $EDK_LIB/opb_pci_v1_02_a
opb_sdram_v1_00_c = $EDK_LIB/opb_sdram_v1_00_c
opb_sdram_v1_00_e = $EDK_LIB/opb_sdram_v1_00_e
opb_spi_v1_00_b = $EDK_LIB/opb_spi_v1_00_b
opb_spi_v1_00_c = $EDK_LIB/opb_spi_v1_00_c
opb_spi_v1_00_d = $EDK_LIB/opb_spi_v1_00_d
opb_spi_v1_00_e = $EDK_LIB/opb_spi_v1_00_e
opb_sysace_v1_00_b = $EDK_LIB/opb_sysace_v1_00_b
opb_sysace_v1_00_c = $EDK_LIB/opb_sysace_v1_00_c
opb_timebase_wdt_v1_00_a = $EDK_LIB/opb_timebase_wdt_v1_00_a
opb_timer_v1_00_b = $EDK_LIB/opb_timer_v1_00_b
opb_uart16550_v1_00_c = $EDK_LIB/opb_uart16550_v1_00_c
opb_uart16550_v1_00_d = $EDK_LIB/opb_uart16550_v1_00_d
opb_uartlite_v1_00_b = $EDK_LIB/opb_uartlite_v1_00_b
opb_v20_v1_10_a = $EDK_LIB/opb_v20_v1_10_a
opb_v20_v1_10_b = $EDK_LIB/opb_v20_v1_10_b
opb_v20_v1_10_c = $EDK_LIB/opb_v20_v1_10_c
pci_arbiter_v1_00_a = $EDK_LIB/pci_arbiter_v1_00_a
plb2opb_bridge_v1_00_b = $EDK_LIB/plb2opb_bridge_v1_00_b
plb2opb_bridge_v1_01_a = $EDK_LIB/plb2opb_bridge_v1_01_a
plb_bfm = $EDK_LIB/plb_bfm
plb_bram_if_cntlr_v1_00_a = $EDK_LIB/plb_bram_if_cntlr_v1_00_a
plb_bram_if_cntlr_v1_00_b = $EDK_LIB/plb_bram_if_cntlr_v1_00_b
plb_ddr2_v1_00_a = $EDK_LIB/plb_ddr2_v1_00_a
plb_ddr2_v1_01_a = $EDK_LIB/plb_ddr2_v1_01_a
plb_ddr_v1_00_c = $EDK_LIB/plb_ddr_v1_00_c
plb_ddr_v1_10_a = $EDK_LIB/plb_ddr_v1_10_a
plb_ddr_v1_11_a = $EDK_LIB/plb_ddr_v1_11_a
plb_ddr_v1_12_a = $EDK_LIB/plb_ddr_v1_12_a
plb_ddr_v2_00_a = $EDK_LIB/plb_ddr_v2_00_a
plb_emc_v1_10_b = $EDK_LIB/plb_emc_v1_10_b
plb_emc_v2_00_a = $EDK_LIB/plb_emc_v2_00_a
plb_ethernet_v1_00_a = $EDK_LIB/plb_ethernet_v1_00_a
plb_ethernet_v1_01_a = $EDK_LIB/plb_ethernet_v1_01_a
plb_gemac_v1_00_b = $EDK_LIB/plb_gemac_v1_00_b
plb_gemac_v1_01_a = $EDK_LIB/plb_gemac_v1_01_a
plb_gpio_v1_00_b = $EDK_LIB/plb_gpio_v1_00_b
plb_ipif_ssp0_v1_00_a = $EDK_LIB/plb_ipif_ssp0_v1_00_a
plb_ipif_ssp1_v1_00_a = $EDK_LIB/plb_ipif_ssp1_v1_00_a
plb_ipif_ssp2_v1_00_a = $EDK_LIB/plb_ipif_ssp2_v1_00_a
plb_ipif_ssp3_v1_00_a = $EDK_LIB/plb_ipif_ssp3_v1_00_a
plb_ipif_v1_00_b = $EDK_LIB/plb_ipif_v1_00_b
plb_ipif_v1_00_c = $EDK_LIB/plb_ipif_v1_00_c
plb_ipif_v1_00_d = $EDK_LIB/plb_ipif_v1_00_d
plb_ipif_v1_00_e = $EDK_LIB/plb_ipif_v1_00_e
plb_ipif_v1_00_f = $EDK_LIB/plb_ipif_v1_00_f
plb_ipif_v1_01_a = $EDK_LIB/plb_ipif_v1_01_a
plb_ipif_v2_00_a = $EDK_LIB/plb_ipif_v2_00_a
plb_ipif_v2_01_a = $EDK_LIB/plb_ipif_v2_01_a
plb_ipif_v2_02_a = $EDK_LIB/plb_ipif_v2_02_a
plb_master_bfm_v1_00_a = $EDK_LIB/plb_master_bfm_v1_00_a
plb_master_llink_v3_01_a = $EDK_LIB/plb_master_llink_v3_01_a
plb_master_llink_v3_02_a = $EDK_LIB/plb_master_llink_v3_02_a
plb_monitor_bfm_v1_00_a = $EDK_LIB/plb_monitor_bfm_v1_00_a
plb_pci_v1_00_a = $EDK_LIB/plb_pci_v1_00_a
plb_rapidio_lvds_v1_00_c = $EDK_LIB/plb_rapidio_lvds_v1_00_c
plb_sdram_v1_00_c = $EDK_LIB/plb_sdram_v1_00_c
plb_sdram_v1_00_e = $EDK_LIB/plb_sdram_v1_00_e
plb_slave_bfm_v1_00_a = $EDK_LIB/plb_slave_bfm_v1_00_a
plb_temac_v2_00_a = $EDK_LIB/plb_temac_v2_00_a
plb_temac_v3_00_a = $EDK_LIB/plb_temac_v3_00_a
plb_uart16550_v1_00_c = $EDK_LIB/plb_uart16550_v1_00_c
plb_v34_v1_01_a = $EDK_LIB/plb_v34_v1_01_a
plb_v34_v1_02_a = $EDK_LIB/plb_v34_v1_02_a
plbv46_bfm = $EDK_LIB/plbv46_bfm/
plbv46_dcr_bridge_v1_00_a = $EDK_LIB/plbv46_dcr_bridge_v1_00_a
plbv46_master_bfm_v1_00_a = $EDK_LIB/plbv46_master_bfm_v1_00_a/
plbv46_master_burst_v1_00_a = $EDK_LIB/plbv46_master_burst_v1_00_a/
plbv46_master_single_v1_00_a = $EDK_LIB/plbv46_master_single_v1_00_a
plbv46_master_v1_00_a = $EDK_LIB/plbv46_master_v1_00_a
plbv46_monitor_bfm_v1_00_a = $EDK_LIB/plbv46_monitor_bfm_v1_00_a/
plbv46_opb_bridge_v1_00_a = $EDK_LIB/plbv46_opb_bridge_v1_00_a
plbv46_pcie_v1_00_a = $EDK_LIB/plbv46_pcie_v1_00_a
plbv46_pci_v1_00_a = $EDK_LIB/plbv46_pci_v1_00_a
plbv46_pci_v1_01_a = $EDK_LIB/plbv46_pci_v1_01_a
plbv46_pim_v1_00_a = $EDK_LIB/plbv46_pim_v1_00_a
plbv46_pim_v1_00_b = $EDK_LIB/plbv46_pim_v1_00_b
plbv46_plbv46_bridge_v1_00_a = $EDK_LIB/plbv46_plbv46_bridge_v1_00_a
plbv46_slave_bfm_v1_00_a = $EDK_LIB/plbv46_slave_bfm_v1_00_a/
plbv46_slave_burst_v1_00_a = $EDK_LIB/plbv46_slave_burst_v1_00_a
plbv46_slave_single_v1_00_a = $EDK_LIB/plbv46_slave_single_v1_00_a/
plbv46_slave_v1_00_a = $EDK_LIB/plbv46_slave_v1_00_a
ppc405_v2_00_c = $EDK_LIB/ppc405_v2_00_c
ppc405_virtex4_v1_00_a = $EDK_LIB/ppc405_virtex4_v1_00_a
ppc405_virtex4_v1_01_a = $EDK_LIB/ppc405_virtex4_v1_01_a
proc_common_v1_00_a = $EDK_LIB/proc_common_v1_00_a
proc_common_v1_00_b = $EDK_LIB/proc_common_v1_00_b
proc_common_v1_00_c = $EDK_LIB/proc_common_v1_00_c
proc_common_v2_00_a = $EDK_LIB/proc_common_v2_00_a/
proc_sys_reset_v1_00_a = $EDK_LIB/proc_sys_reset_v1_00_a
proc_utils_v1_00_a = $EDK_LIB/proc_utils_v1_00_a
rdpfifo_v1_01_b = $EDK_LIB/rdpfifo_v1_01_b
rdpfifo_v2_00_a = $EDK_LIB/rdpfifo_v2_00_a
rdpfifo_v2_01_a = $EDK_LIB/rdpfifo_v2_01_a
rdpfifo_v4_00_a = $EDK_LIB/rdpfifo_v4_00_a
sdram_v1_00_c = $EDK_LIB/sdram_v1_00_c
sdram_v1_00_e = $EDK_LIB/sdram_v1_00_e
sdram_v1_01_a = $EDK_LIB/sdram_v1_01_a
sysace_common_v1_00_b = $EDK_LIB/sysace_common_v1_00_b
sysace_common_v1_00_c = $EDK_LIB/sysace_common_v1_00_c
util_bus_split_v1_00_a = $EDK_LIB/util_bus_split_v1_00_a
util_flipflop_v1_00_a = $EDK_LIB/util_flipflop_v1_00_a
util_reduced_logic_v1_00_a = $EDK_LIB/util_reduced_logic_v1_00_a
util_vector_logic_v1_00_a = $EDK_LIB/util_vector_logic_v1_00_a
wrpfifo_v1_01_b = $EDK_LIB/wrpfifo_v1_01_b
wrpfifo_v2_00_a = $EDK_LIB/wrpfifo_v2_00_a
wrpfifo_v3_00_a = $EDK_LIB/wrpfifo_v3_00_a
wrpfifo_v4_00_a = $EDK_LIB/wrpfifo_v4_00_a

; ReconOS pcore simulation libraries
reconos_v2_00_a = $RECONOS/support/simlibs/reconos_v2_00_a
osif_v2_00_a = $RECONOS/support/simlibs/osif_v2_00_a
burst_ram_v2_00_a = $RECONOS/support/simlibs/burst_ram_v2_00_a
reconos_v2_01_a = $RECONOS/support/simlibs/reconos_v2_01_a
osif_v2_01_a = $RECONOS/support/simlibs/osif_v2_01_a
burst_ram_v2_01_a = $RECONOS/support/simlibs/burst_ram_v2_01_a
plb_osif_v2_01_a = $RECONOS/support/simlibs/plb_osif_v2_01_a
osif_core_v2_01_a = $RECONOS/support/simlibs/osif_core_v2_01_a
osif_new_v1_00_a = $RECONOS/support/simlibs/osif_new_v1_00_a
xps_osif_v2_01_a = $RECONOS/support/simlibs/xps_osif_v2_01_a

plb_v46_v1_00_a = $EDK_LIB/plb_v46_v1_00_a/
work = work
xps_osif_tb_v2_01_a = xps_osif_tb_v2_01_a
[vcom]
; VHDL93 variable selects language version as the default. 
; Default is VHDL-2002.
; Value of 0 or 1987 for VHDL-1987.
; Value of 1 or 1993 for VHDL-1993.
; Default or value of 2 or 2002 for VHDL-2002.
VHDL93 = 2002

; Show source line containing error. Default is off.
; Show_source = 1

; Turn off unbound-component warnings. Default is on.
; Show_Warning1 = 0

; Turn off process-without-a-wait-statement warnings. Default is on.
; Show_Warning2 = 0

; Turn off null-range warnings. Default is on.
; Show_Warning3 = 0

; Turn off no-space-in-time-literal warnings. Default is on.
; Show_Warning4 = 0

; Turn off multiple-drivers-on-unresolved-signal warnings. Default is on.
; Show_Warning5 = 0

; Turn off optimization for IEEE std_logic_1164 package. Default is on.
; Optimize_1164 = 0

; Turn on resolving of ambiguous function overloading in favor of the
; "explicit" function declaration (not the one automatically created by
; the compiler for each type declaration). Default is off.
; The .ini file has Explicit enabled so that std_logic_signed/unsigned
; will match the behavior of synthesis tools.
Explicit = 1

; Turn off acceleration of the VITAL packages. Default is to accelerate.
; NoVital = 1

; Turn off VITAL compliance checking. Default is checking on.
; NoVitalCheck = 1

; Ignore VITAL compliance checking errors. Default is to not ignore.
; IgnoreVitalErrors = 1

; Turn off VITAL compliance checking warnings. Default is to show warnings.
; Show_VitalChecksWarnings = 0

; Turn off PSL assertion warning messages. Default is to show warnings.
; Show_PslChecksWarnings = 0

; Enable parsing of embedded PSL assertions. Default is enabled.
; EmbeddedPsl = 0

; Keep silent about case statement static warnings.
; Default is to give a warning.
; NoCaseStaticError = 1

; Keep silent about warnings caused by aggregates that are not locally static.
; Default is to give a warning.
; NoOthersStaticError = 1

; Treat as errors:
;   case statement static warnings
;   warnings caused by aggregates that are not locally static
; Overrides NoCaseStaticError, NoOthersStaticError settings.
; PedanticErrors = 1

; Turn off inclusion of debugging info within design units.
; Default is to include debugging info.
; NoDebug = 1

; Turn off "Loading..." messages. Default is messages on.
; Quiet = 1

; Turn on some limited synthesis rule compliance checking. Checks only:
;    -- signals used (read) by a process must be in the sensitivity list
; CheckSynthesis = 1

; Activate optimizations on expressions that do not involve signals,
; waits, or function/procedure/task invocations. Default is off.
; ScalarOpts = 1

; Turns on lint-style checking.
; Show_Lint = 1

; Require the user to specify a configuration for all bindings,
; and do not generate a compile time default binding for the
; component. This will result in an elaboration error of
; 'component not bound' if the user fails to do so. Avoids the rare
; issue of a false dependency upon the unused default binding.
; RequireConfigForAllDefaultBinding = 1

; Perform default binding at compile time.
; Default is to do default binding at load time.
; BindAtCompile=1;

; Inhibit range checking on subscripts of arrays. Range checking on
; scalars defined with subtypes is inhibited by default.
; NoIndexCheck = 1

; Inhibit range checks on all (implicit and explicit) assignments to
; scalar objects defined with subtypes.
; NoRangeCheck = 1

; Run the 0in tools from within the simulator. 
; Default value set to 0. Please set it to 1 to invoke 0in.
; VcomZeroIn = 1

; Set the options to be passed to the 0in tools.
; Default value set to "". Please set it to appropriate options needed.
; VcomZeroInOptions = ""

; Turn off code coverage in VHDL subprograms. Default is on.
; CoverageNoSub = 0

; Automatically exclude VHDL case statement default branches. 
; Default is to not exclude.
; CoverExcludeDefault = 1

; Turn on code coverage in VHDL generate blocks. Default is off.
; CoverGenerate = 1

[vlog]

; Turn off inclusion of debugging info within design units.
; Default is to include debugging info.
; NoDebug = 1

; Turn on `protect compiler directive processing.
; Default is to ignore `protect directives.
; Protect = 1

; Turn off "Loading..." messages. Default is messages on.
; Quiet = 1

; Turn on Verilog hazard checking (order-dependent accessing of global vars).
; Default is off.
; Hazard = 1

; Turn on converting regular Verilog identifiers to uppercase. Allows case
; insensitivity for module names. Default is no conversion.
; UpCase = 1

; Activate optimizations on expressions that do not involve signals,
; waits, or function/procedure/task invocations. Default is off.
; ScalarOpts = 1

; Turns on lint-style checking.
; Show_Lint = 1

; Show source line containing error. Default is off.
; Show_source = 1

; Turn on bad option warning. Default is off.
; Show_BadOptionWarning = 1

; Revert back to IEEE 1364-1995 syntax, default is 0 (off).
vlog95compat = 0

; Turn off PSL warning messages. Default is to show warnings.
; Show_PslChecksWarnings = 0

; Enable parsing of embedded PSL assertions. Default is enabled.
; EmbeddedPsl = 0

; Set the threshold for automatically identifying sparse Verilog memories.
; A memory with depth equal to or more than the sparse memory threshold gets
; marked as sparse automatically, unless specified otherwise in source code.
; The default is 0 (i.e. no memory is automatically given sparse status)
; SparseMemThreshold = 1048576 

; Set the maximum number of iterations permitted for a generate loop.
; Restricting this permits the implementation to recognize infinite
; generate loops.
; GenerateLoopIterationMax = 100000

; Set the maximum depth permitted for a recursive generate instantiation.
; Restricting this permits the implementation to recognize infinite
; recursions.
; GenerateRecursionDepthMax = 200

; Run the 0in tools from within the simulator. 
; Default value set to 0. Please set it to 1 to invoke 0in.
; VlogZeroIn = 1

; Set the options to be passed to the 0in tools.
; Default value set to "". Please set it to appropriate options needed.
; VlogZeroInOptions = ""

; Run the 0in tools from within the simulator. 
; Default value set to 0. Please set it to 1 to invoke 0in.
; VoptZeroIn = 1

; Set the options to be passed to the 0in tools.
; Default value set to "". Please set it to appropriate options needed.
; VoptZeroInOptions = ""

; Set the option to treat all files specified in a vlog invocation as a
; single compilation unit. The default value is set to 0 which will treat
; each file as a separate compilation unit as specified in the P1800 draft standard.
; MultiFileCompilationUnit = 1

; Automatically exclude VLOG case statement default branches. 
; Default is to not exclude.
; CoverExcludeDefault = 1

; Turn on code coverage in VLOG generate blocks. Default is off.
; CoverGenerate = 1

[sccom]
; Enable use of SCV include files and library.  Default is off.
; UseScv = 1

; Add C++ compiler options to the sccom command line by using this variable.
; CppOptions = -g

; Use custom C++ compiler located at this path rather than the default path.
; The path should point directly at a compiler executable.
; CppPath = /usr/bin/g++

; Enable verbose messages from sccom.  Default is off.
; SccomVerbose = 1

; sccom logfile.  Default is no logfile.
; SccomLogfile = sccom.log

; Enable use of SC_MS include files and library.  Default is off.
; UseScMs = 1

[vsim]

; vopt flow
; Set to turn on automatic optimization of a design.
; Default is off (pre-6.0 flow without vopt).
; VoptFlow = 1

; Simulator resolution
; Set to fs, ps, ns, us, ms, or sec with optional prefix of 1, 10, or 100.
Resolution = ps

; User time unit for run commands
; Set to default, fs, ps, ns, us, ms, or sec. The default is to use the
; unit specified for Resolution. For example, if Resolution is 100ps,
; then UserTimeUnit defaults to ps.
; Should generally be set to default.
UserTimeUnit = default

; Default run length
RunLength = 100

; Maximum iterations that can be run without advancing simulation time
IterationLimit = 5000

; Control PSL and Verilog Assume during simulation
; Set SimulateAssumeDirectives = 0 to disable assume being simulated as asserts
; Set SimulateAssumeDirectives = 1 to enable assume simulation as asserts
; SimulateAssumeDirectives = 1 

; Directives to license manager can be set either as single value or as
; space separated multi-values:
; vhdl          Immediately reserve a VHDL license
; vlog          Immediately reserve a Verilog license
; plus          Immediately reserve a VHDL and Verilog license
; nomgc         Do not look for Mentor Graphics Licenses
; nomti         Do not look for Model Technology Licenses
; noqueue       Do not wait in the license queue when a license is not available
; viewsim       Try for viewer license but accept simulator license(s) instead
;               of queuing for viewer license (PE ONLY)
; noviewer	Disable checkout of msimviewer and vsim-viewer license 
;		features (PE ONLY)
; noslvhdl	Disable checkout of qhsimvh and vsim license features
; noslvlog	Disable checkout of qhsimvl and vsimvlog license features
; nomix		Disable checkout of msimhdlmix and hdlmix license features
; nolnl		Disable checkout of msimhdlsim and hdlsim license features
; mixedonly	Disable checkout of qhsimvh,qhsimvl,vsim,vsimvlog license 
;		features
; lnlonly	Disable checkout of qhsimvh,qhsimvl,vsim,vsimvlog,msimhdlmix,
;		hdlmix license features
; Single value:
; License = plus
; Multi-value:
; License = noqueue plus

; Stop the simulator after a VHDL/Verilog immediate assertion message
; 0 = Note  1 = Warning  2 = Error  3 = Failure  4 = Fatal
BreakOnAssertion = 3

; VHDL assertion Message Format
; %S - Severity Level 
; %R - Report Message
; %T - Time of assertion
; %D - Delta
; %I - Instance or Region pathname (if available)
; %i - Instance pathname with process
; %O - Process name
; %K - Kind of object path is to return: Instance, Signal, Process or Unknown
; %P - Instance or Region path without leaf process
; %F - File
; %L - Line number of assertion or, if assertion is in a subprogram, line
;      from which the call is made
; %% - Print '%' character
; If specific format for assertion level is defined, use its format.
; If specific format is not defined for assertion level:
; - and if failure occurs during elaboration, use AssertionFormatBreakLine;
; - and if assertion triggers a breakpoint (controlled by BreakOnAssertion
;   level), use AssertionFormatBreak;
; - otherwise, use AssertionFormat.
; AssertionFormatBreakLine = "** %S: %R\n   Time: %T  Iteration: %D  %K: %i File: %F Line: %L\n"
; AssertionFormatBreak     = "** %S: %R\n   Time: %T  Iteration: %D  %K: %i File: %F\n"
; AssertionFormat          = "** %S: %R\n   Time: %T  Iteration: %D%I\n"
; AssertionFormatNote      = "** %S: %R\n   Time: %T  Iteration: %D%I\n"
; AssertionFormatWarning   = "** %S: %R\n   Time: %T  Iteration: %D%I\n"
; AssertionFormatError     = "** %S: %R\n   Time: %T  Iteration: %D  %K: %i File: %F\n"
; AssertionFormatFail      = "** %S: %R\n   Time: %T  Iteration: %D  %K: %i File: %F\n"
; AssertionFormatFatal     = "** %S: %R\n   Time: %T  Iteration: %D  %K: %i File: %F\n"

; Assertion File - alternate file for storing VHDL/PSL/Verilog assertion messages
; AssertFile = assert.log

; Default radix for all windows and commands.
; Set to symbolic, ascii, binary, octal, decimal, hex, unsigned
DefaultRadix = symbolic

; VSIM Startup command
; Startup = do startup.do

; File for saving command transcript
TranscriptFile = transcript

; File for saving command history
; CommandHistory = cmdhist.log

; Specify whether paths in simulator commands should be described
; in VHDL or Verilog format.
; For VHDL, PathSeparator = /
; For Verilog, PathSeparator = .
; Must not be the same character as DatasetSeparator.
;PathSeparator = /

; Specify the dataset separator for fully rooted contexts.
; The default is ':'. For example: sim:/top
; Must not be the same character as PathSeparator.
DatasetSeparator = :

; Disable VHDL assertion messages
; IgnoreNote = 1
; IgnoreWarning = 1
; IgnoreError = 1
; IgnoreFailure = 1

; Disable System Verilog assertion messages
; Info and Warning are disabled by default
; IgnoreSVAInfo = 0
; IgnoreSVAWarning = 0
; IgnoreSVAError = 1
; IgnoreSVAFatal = 1

; Default force kind. May be freeze, drive, deposit, or default
; or in other terms, fixed, wired, or charged.
; A value of "default" will use the signal kind to determine the
; force kind, drive for resolved signals, freeze for unresolved signals
; DefaultForceKind = freeze

; If zero, open files when elaborated; otherwise, open files on
; first read or write.  Default is 0.
; DelayFileOpen = 1

; Control VHDL files opened for write.
;   0 = Buffered, 1 = Unbuffered
UnbufferedOutput = 0

; Control the number of VHDL files open concurrently.
; This number should always be less than the current ulimit
; setting for max file descriptors.
;   0 = unlimited
ConcurrentFileLimit = 40

; Control the number of hierarchical regions displayed as
; part of a signal name shown in the Wave window.
; A value of zero tells VSIM to display the full name.
; The default is 0.
; WaveSignalNameWidth = 0

; Turn off warnings when changinge VHDL constants and generics
; Default is 1 to generate warning messages
; WarnConstantChange = 0

; Turn off warnings from the std_logic_arith, std_logic_unsigned
; and std_logic_signed packages.
; StdArithNoWarnings = 1

; Turn off warnings from the IEEE numeric_std and numeric_bit packages.
; NumericStdNoWarnings = 1

; Control the format of a generate statement label. Do not quote it.
; GenerateFormat = %s__%d

; Specify whether checkpoint files should be compressed.
; The default is 1 (compressed).
; CheckpointCompressMode = 0

; List of dynamically loaded objects for Verilog PLI applications
; Veriuser = veriuser.sl
Veriuser = $MODEL_TECH/libswiftpli.sl

; Specify default options for the restart command. Options can be one
; or more of: -force -nobreakpoint -nolist -nolog -nowave -noassertions
; DefaultRestartOptions = -force

; HP-UX 10.20 ONLY - Enable memory locking to speed up large designs
; (> 500 megabyte memory footprint). Default is disabled.
; Specify number of megabytes to lock.
; LockedMemory = 1000

; HP-UX 11.00 ONLY - Use /usr/lib/libCsup_v2.sl for shared object loading.
; This is necessary when C++ files have been compiled with aCC's -AA option.
; The default behavior is to use /usr/lib/libCsup.sl.
; UseCsupV2 = 1

; Turn on (1) or off (0) WLF file compression.
; The default is 1 (compress WLF file).
; WLFCompress = 0

; Specify whether to save all design hierarchy (1) in the WLF file
; or only regions containing logged signals (0).
; The default is 0 (log only regions with logged signals).
; WLFSaveAllRegions = 1

; WLF file time limit.  Limit WLF file by time, as closely as possible,
; to the specified amount of simulation time.  When the limit is exceeded
; the earliest times get truncated from the file.
; If both time and size limits are specified the most restrictive is used.
; UserTimeUnits are used if time units are not specified.
; The default is 0 (no limit).  Example: WLFTimeLimit = {100 ms}
; WLFTimeLimit = 0

; WLF file size limit.  Limit WLF file size, as closely as possible,
; to the specified number of megabytes.  If both time and size limits
; are specified then the most restrictive is used.
; The default is 0 (no limit).
; WLFSizeLimit = 1000

; Specify whether or not a WLF file should be deleted when the
; simulation ends.  A value of 1 will cause the WLF file to be deleted.
; The default is 0 (do not delete WLF file when simulation ends).
; WLFDeleteOnQuit = 1

; Specify whether or not a WLF file should be optimized during 
; simulation.  If set to 0, the WLF file will not be optimized.
; The default is 1, optimize the WLF file.
; WLFOptimize = 0

; Specify the name of the WLF file.
; The default is vsim.wlf
; WLFFilename = vsim.wlf

; WLF reader cache size limit.  Specifies the internal WLF file cache size, 
; in megabytes, for EACH open WLF file.  A value of 0 turns off the
; WLF cache.
; The default is 0, disable WLF file caching.
; WLFCacheSize = 1000 

; Specify the WLF file event collapse mode.
; 0 = Preserve all events and event order. (same as -wlfnocollapse)
; 1 = Only record values of logged objects at the end of a simulator iteration. 
;     (same as -wlfcollapsedelta)
; 2 = Only record values of logged objects at the end of a simulator time step. 
;     (same as -wlfcollapsetime)
; The default is 1.
; WLFCollapseMode = 0

; Turn on/off undebuggable SystemC type warnings. Default is on.
; ShowUndebuggableScTypeWarning = 0

; Turn on/off unassociated SystemC name warnings. Default is off.
; ShowUnassociatedScNameWarning = 1

; Set SystemC default time unit.
; Set to fs, ps, ns, us, ms, or sec with optional 
; prefix of 1, 10, or 100.  The default is 1 ns.
; The ScTimeUnit value is honored if it is coarser than Resolution.
; If ScTimeUnit is finer than Resolution, it is set to the value
; of Resolution. For example, if Resolution is 100ps and ScTimeUnit is ns,
; then the default time unit will be 1 ns.  However if Resolution 
; is 10 ns and ScTimeUnit is ns, then the default time unit will be 10 ns.
ScTimeUnit = ns


; Run simulator in assertion debug mode. Default is off.
; AssertionDebug = 1

; Turn on/off PSL/SVA concurrent assertion pass enable. Default is on.
; AssertionPassEnable = 0 

; Turn on/off PSL/SVA concurrent assertion fail enable. Default is on.
; AssertionFailEnable = 0

; Set PSL/SVA concurrent assertion pass limit. Default is -1.
; Any positive integer, -1 for infinity.
; AssertionPassLimit = 1

; Set PSL/SVA concurrent assertion fail limit. Default is -1.
; Any positive integer, -1 for infinity.
; AssertionFailLimit = 1

; Turn on/off PSL concurrent assertion pass log. Default is off. 
; The flag does not affect SVA
; AssertionPassLog = 1

; Turn on/off PSL concurrent assertion fail log. Default is on. 
; The flag does not affect SVA
; AssertionFailLog = 0

; Set action type for PSL/SVA concurrent assertion fail action. Default is continue.
; 0 = Continue  1 = Break  2 = Exit
; AssertionFailAction = 1

; Turn on/off code coverage
; CodeCoverage = 0

; Count all code coverage condition and expression truth table rows that match.
; CoverCountAll = 1

; Turn on/off all PSL/SVA cover directive enables.  Default is on.
; CoverEnable = 0

; Turn on/off PSL/SVA cover log.  Default is off.
; CoverLog = 1

; Set "at_least" value for all PSL/SVA cover directives.  Default is 1.
; CoverAtLeast = 2

; Set "limit" value for all PSL/SVA cover directives.  Default is -1.
; Any positive integer, -1 for infinity.
; CoverLimit = 1

; Specify the functional coverage database filename.
; The default is vsim.fcdb
; FCDBFilename = vsim.fcdb

; Set weight for all PSL/SVA cover directives.  Default is 1.
; CoverWeight = 2

; Check vsim plusargs.  Default is 0 (off).
; 0 = Don't check plusargs
; 1 = Warning on unrecognized plusarg
; 2 = Error and exit on unrecognized plusarg
; CheckPlusargs = 1

; Load the specified shared objects with the RTLD_GLOBAL flag.
; This gives global visibility to all symbols in the shared objects,
; meaning that subsequently loaded shared objects can bind to symbols
; in the global shared objects.  The list of shared objects should
; be whitespace delimited.  This option is not supported on the
; Windows or AIX platforms.
; GlobalSharedObjectList = example1.so example2.so example3.so

; Run the 0in tools from within the simulator. 
; Default value set to 0. Please set it to 1 to invoke 0in.
; VsimZeroIn = 1

; Set the options to be passed to the 0in tools.
; Default value set to "". Please set it to appropriate options needed.
; VsimZeroInOptions = ""

; Initial seed for the Random Number Generator (RNG) of the root thread (SystemVerilog).
;Sv_Seed = 0

; Error message severity when randomize() failure is detected (SystemVerilog).
; The default is 0 (no error).
; 0 = No error  1 = Warning  2 = Error  3 = Failure  4 = Fatal
; SolveFailSeverity = 0

; Enable/disable debug information for randomize() failures (SystemVerilog).
; The default is 0 (disabled). Set to 1 to enable.
; SolveFailDebug = 0

[lmc]
; The simulator's interface to Logic Modeling's SmartModel SWIFT software
libsm = $MODEL_TECH/libsm.sl
; The simulator's interface to Logic Modeling's SmartModel SWIFT software (Windows NT)
; libsm = $MODEL_TECH/libsm.dll
;  Logic Modeling's SmartModel SWIFT software (HP 9000 Series 700)
; libswift = $LMC_HOME/lib/hp700.lib/libswift.sl
;  Logic Modeling's SmartModel SWIFT software (IBM RISC System/6000)
; libswift = $LMC_HOME/lib/ibmrs.lib/swift.o
;  Logic Modeling's SmartModel SWIFT software (Sun4 Solaris)
; libswift = $LMC_HOME/lib/sun4Solaris.lib/libswift.so
;  Logic Modeling's SmartModel SWIFT software (Windows NT)
; libswift = $LMC_HOME/lib/pcnt.lib/libswift.dll
;  Logic Modeling's SmartModel SWIFT software (Linux)
libswift = $LMC_HOME/lib/x86_linux.lib/libswift.so

; The simulator's interface to Logic Modeling's hardware modeler SFI software
libhm = $MODEL_TECH/libhm.sl
; The simulator's interface to Logic Modeling's hardware modeler SFI software (Windows NT)
; libhm = $MODEL_TECH/libhm.dll
;  Logic Modeling's hardware modeler SFI software (HP 9000 Series 700)
; libsfi = <sfi_dir>/lib/hp700/libsfi.sl
;  Logic Modeling's hardware modeler SFI software (IBM RISC System/6000)
; libsfi = <sfi_dir>/lib/rs6000/libsfi.a
;  Logic Modeling's hardware modeler SFI software (Sun4 Solaris)
; libsfi = <sfi_dir>/lib/sun4.solaris/libsfi.so
;  Logic Modeling's hardware modeler SFI software (Windows NT)
; libsfi = <sfi_dir>/lib/pcnt/lm_sfi.dll
;  Logic Modeling's hardware modeler SFI software (Linux)
; libsfi = <sfi_dir>/lib/linux/libsfi.so

[msg_system]
; Change a message severity or suppress a message.
; The format is: <msg directive> = <msg number>[,<msg number>...]
; Examples:
;   note = 3009
;   warning = 3033
;   error = 3010,3016
;   suppress = 3009,3016,3043
; The command verror <msg number> can be used to get the complete
; description of a message.

